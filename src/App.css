.App {
  text-align: center;
  color: white; /* Fondi värv */
  font-family: 'Kanit', sans-serif;
}

.item1 { grid-area: header; }
.item2 { grid-area: menu; }
.item3 { grid-area: main; }
.item4 { grid-area: right; }
.item5 { grid-area: footer; }

.surround {
  display: grid;
  grid-template-areas:
    'header header header header header right'
    'menu menu menu menu main right'
    'menu menu menu menu footer right';
  gap: 2%; /* Use percentage for gap */
  padding: 5%;
  height: 100vh; /* Full viewport height */
}

.grid-container > div {
  background-color: rgba(255, 255, 255, 0.8);
  text-align: left;
  padding: 2% 0;
}

.pealkiri{
  font-weight: 400;
}

.background1 {
  text-align: left;
  font-weight: 200;
}

.background2 {
  text-align: left;
  font-weight: 200;
}

.background3 {
  width: 15%;
  height:160vh;
  padding: 2%;
}

.background5 {
  padding: 2%;
}

h3{
  font-weight: 700;
  line-height: 1;
}

.highlight{
  font-weight: bold;
  background: linear-gradient(to right, #931912 , #df271d);/* tekstile värvi ülemineku lisamine */
			-webkit-text-fill-color: transparent;
			-webkit-background-clip: text;
}

.image-little{
  width: 30vh;
  height: 20vh;
  border-radius: 6px 6px 6px 6px;
}


.image-big{
  position:relative;
  background-color: #ffffff;
  width: 40vh;
  height: 90vh;
  background-size: 40vh 95vh;
  overflow:hidden;
  clip-path: polygon(  /* Teeb diagonaalsed ääred */
    0 5%,
    10% 0,
    90% 0,
    100% 5%,
    100% 95%,
    90% 100%,
    10% 100%,
    0% 95%,
    0% 10%
  );
  color: black;/* teksti kujundus */
  text-align: left;
  padding-left: 2vh;
  padding-right: 3vh;
  padding-top: 8vh;
  padding-bottom: 8vh;
}





ul {
  list-style-type: none;
  padding: 0;
}

/* Style for list items */
li {
  position: relative; /* Make the li elements a positioning context */
  margin-bottom: 1vh;
  padding-left: 2vh; /* Add left padding to make space for the lines */
}

/* Style for lines using ::before pseudo-element */
li::before {
  position: absolute;
  content: "";
  left: 0;
  top: 50%; /* Position the line vertically in the middle of the list item */
  width: 1.5vh; /* Adjust the width of the line as needed */
  height: 0.5vh; /* Adjust the height of the line as needed */
  background: linear-gradient(to right, #931912 , #df271d); /* Line color */
  border-radius: 1.5px; /* Add border-radius to make line corners round */
}

li:nth-child(2) {
  position: relative; /* Ensure proper stacking context */
  z-index: 3; /* Raise the content above the line */
  
}

/* Style for nested list */
ul ul {
  list-style-type: none; /* Use discs as the points for the nested list */
  margin-top: 1vh; /* Add margin to separate the nested list from the parent item */
  margin-left: 2vh; /* Indent the nested list */
}

ul ul li::before {
  background: linear-gradient(to right, #ffffff , #7b808e); /* Change the line color to green for nested lists */
}

.input-container-border{
  width: 100%;
  padding: 0.2vh;
  border: 3px;
  border-radius: 3px;
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.1),
    0 1px 1px -2px rgba(0, 0, 0, 0.05);
  background: linear-gradient(to right, #d4dae8, #a6b6d8);
}

input{
  width: 94.75%;
  padding: 1vh;
  font-size: 3vh;
  border: none;
  border-radius: 3px;
  outline: none;
}

.static-text {
  position: absolute;
  right: 1vh; /* Adjust the right position as needed */
  top: 50%;
  bottom: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  font-weight: 500;
}

.input-container {
  display: inline-block;
  position: relative;
  margin-bottom: 1em;
  border-radius: 3px;
}




.checkbox-container {
  display: flex; /* Use flexbox for alignment */
  align-items: center; /* Center items vertically */
  margin: 2px; /* Adjust the distance between outer span and checkbox */
}

input[type="checkbox"] {
  display: none; /* Hide the default checkbox */
}

.checkbox-border {
  display: inline-block;
  position: relative;
  width: 20px; /* Set the width of the outer span */
  height: 20px; /* Set the height of the outer span */
  border-radius: 3px;
  overflow: hidden; /* Clip the inner content to the rounded corners */
  background: linear-gradient(to right, #d4dae8, #a6b6d8);
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.1),
    0 1px 1px -2px rgba(0, 0, 0, 0.05);
}

.checkbox-border::before {
  content: ''; /* Create an empty content box */
  position: absolute;
  top: 2px; /* Adjust the position as needed */
  left: 2px; /* Adjust the position as needed */
  width: 16px; /* Set the width of the pseudo-element */
  height: 16px; /* Set the height of the pseudo-element */
  border-radius: 2px; /* Adjust the border-radius */
  background-color: white; /* Set the background color to cover the checkbox */
  cursor:pointer;
}

input[type="checkbox"]:checked + .checkbox-border::before {
  content: '\2714'; /* Unicode check mark character */
}

.label-text {
  margin-left: 5px; /* Adjust the distance between the checkbox and label text */
  font-weight: 400;
}




::-ms-input-placeholder { /* Edge 12-18 */
  color: black;
}


::placeholder { /* Firefox */
  color: black;
  opacity: 1; 
}

label{
  font-weight: 400;
}



.button{
  background: linear-gradient(to right, #911812, #e0271c);
  border: none;
  outline: none;
  border-radius: 2em;
  padding: 2vh 4vh 2vh 4vh;
  font-weight: 400;
  color: white;
  text-shadow: 2px 2px #732420;
  margin-top: 1em;
  margin-bottom: 1em;
  cursor:pointer;
}


.joon{
  position: absolute;
  height: 1px;
  background: #e8ecf4;
  width: 200% ;
  right: 0;
}


.cover{
 display: flex;
 margin-bottom: 1em;
}

.cover-column{
  text-align: center;
}

.cover-column-gap{
  margin-bottom: 0.5em;
  margin-top: 1em;
}

.cover-column-text1{
  font-weight: 400;
  line-height: 1;
}

.cover-column-text2{
  font-weight: 600;
}

.cover-column-text3{
  font-weight: 600;
  font-size: 1.5em;
}

.cover-column-text4{
  font-weight: 400;
  color: #7a808f;
  line-height: 1;
}



.solution{
  text-align: center;
  margin-top: 2em;
  line-height: 1;
}

.solution-text{
  font-weight: 400;
}

.solution-text-awnser{
  font-weight: 600;
  font-size: 2em;
}

